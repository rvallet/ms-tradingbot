<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Parent - Permet d'hériter des configurations d'un POM parent -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- Project Information - Permet de définir les informations du projet -->
	<groupId>com.fts</groupId>
	<artifactId>ms_tradingbot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ms-tradingbot</name>
	<description>Test microservice pour API Binance</description>

	<!-- Définition des propriétés de configuration du projet (packaging, encodage, version Java...) -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>21</java.version>
	</properties>

	<!-- Déclaration des dépendances du projet -->
	<dependencies>

		<!-- Spring Boot Starter Web - Fournit les dépendances pour créer des applications web RESTful avec Spring MVC -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot Starter Test  - Permet d'effectuer des tests unitaires et d'intégration -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<!-- On exclut la dépendance JUnit Vintage pour éviter les conflits avec JUnit 5 -->
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Mongo Flapdoodle Database - Permet de simuler une base de données MongoDB pour les tests -->
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<version>4.20.0</version>
			<!-- On déclare la portée de cette dépendance pour qu'elle ne soit utilisée que lors des tests -->
			<scope>test</scope>
		</dependency>

		<!-- Spring Data MongoDB - Permet d'interagir avec MongoDB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<!-- Swagger UI - permet d'afficher la documentation de l'API -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.8.6</version>
		</dependency>

		<!-- Hibernate Validator : implémentation de Bean Validation (Jakarta Validation)
             utilisée pour définir des contraintes de validation sur les objets,
             et également par Spring pour la validation automatique des Beans de l'application -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>8.0.2.Final</version>
		</dependency>

	</dependencies>

	<!-- Configuration de la phase de build du projet -->
	<build>
		<plugins>

			<!-- Plugin Maven pour Spring Boot, facilite la création et l'exécution d'applications Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Plugin Maven pour compiler le code Java, spécifie la version de Java à utiliser -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.14.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- Plugin Maven pour exécuter des tests unitaires -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-javaagent:${settings.localRepository}/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar</argLine>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>